@model WebUI.ViewModels.OrderViewModel

<script>
    function removeFromCart(productId) {
        $(function () {
            $.post('/ShoppingCart/RemoveFromCart',
                { productId: productId }, function (data) {
                    if (data.success) {
                        alert("Item removed from your cart.");
                    }
                    else {
                        alert("Failure!");
                    }
                    location.reload();
                });
        });
    }

    function updateQuantity(productId, quantity, quantityField) {
        if (quantity > 0) {
            $.post('/ShoppingCart/UpdateQuantity',
                { productId: productId, quantity: quantity }, function (data) {
                    if (data.success) {
                    }
                    else {
                        alert("Failure!");
                    }
                });
        }
        else {
            $.post('/ShoppingCart/UpdateQuantity',
                { productId: productId, quantity: 1 }, function (data) {
                    if (data.success) {
                    }
                    else {
                        alert("Failure!");
                    }
            });
            quantityField.value = 1;
        }
    }

    function sendOrder() {
        var day = document.querySelector("#day").value;
        var hour = document.querySelector("#hour").value;
        var minute = document.querySelector("#minute").value;

        $.ajax({
            type: 'post',
            url: '@Url.Action("PostOrder","ShoppingCart")',
            data: {
                day: day,
                hour: hour,
                minute: minute
            },
            complete: function (xhr) {
                alert(xhr.responseJSON.text);
                location.reload();
            }
        });
    }
</script>

@if (Model.OrderLineList.Count > 0)
{

    @*PRODUCT_LIST*@
    <div class="product-item-container">

        @foreach (var item in Model.OrderLineList)
        {
            @Html.Partial("~/Views/ShoppingCart/Details.cshtml", item)
        }

    </div>

    <div class="order-finalize-container">
        <div class="pick-up-time-container" id="pick-up-time-container">
            <div class="pick-up-time-box">
                <div class="pick-up-time-text">Select Pick Up Time:</div>
                <div class="pick-up-time-select">
                    <form class="pick-up-time-form" id="pick-up-time-form">
                        <select name="day" id="day" onchange="updateHourSelectBox(this)">
                            <option value="Today">Today</option>
                            <option value="Tomorrow">Tomorrow</option>
                            <option value="Days2">2 Days</option>
                            <option value="Days3">3 Days</option>
                            <option value="Days4">4 Days</option>
                            <option value="Days5">5 Days</option>
                        </select>
                        <select name="hour" id="hour">
                            <!--populated using JavaScript-->
                        </select>
                        <select name="minute" id="minute">
                            <option value="00">00</option>
                            <option value="15">15</option>
                            <option value="30">30</option>
                            <option value="45">45</option>
                        </select>
                    </form>
                </div>
            </div>
        </div>

        @if (Session["TokenInfo"] is null)
        {
            <div class="confirm-order-button-container">
                <div id="confirmOrderBtn" style="width: 120px; margin-left: 8rem;">You must log in to finish ordering.</div>
            </div>
        }
        else
        {
            <div class="confirm-order-button-container">
                <input type="submit" value="Confirm Order" id="confirmOrderBtn" onclick="sendOrder()" />
            </div>
        }
    </div>
}
else
{
<div class="col-sm-10">
    <div style="font-family: 'Lato', sans-serif; font-size: 24px; vertical-align: middle; text-align: center;">You have no products in your cart.</div>
</div>
}



<script type="text/javascript">

    //PickUpTime select Box
    var CurrentHour = new Date().getHours();
            var availableHours = new Array();
    for (var i = 6; i <= 23; i++) {
        if (i >= CurrentHour) { availableHours.push(i.toString()); }
    }
    var Select_List_Data = {
        'hour': {

            'Today': {
                text: availableHours,
                value: availableHours
            },
            'Tomorrow': {
                text: ['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'],
                value: ['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23']
            },
            'Days2': {
                text: ['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'],
                value: ['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23']
            },
            'Days3': {
                text: ['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'],
                value: ['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23']
            },
            'Days4': {
                text: ['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'],
                value: ['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23']
            },
            'Days5': {
                text: ['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'],
                value: ['6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23']
            }

        }
    };
        // anonymous function assigned to onchange event of controlling select list
        function updateHourSelectBox(selectBox) {
            // name of associated select list
            var relName = 'hour';

            // reference to associated select list
            var relList = selectBox.form.elements[relName];

            // get data from object literal based on selection in controlling select list (this.value)
            var obj = Select_List_Data[relName][selectBox.value];

            // remove current option elements
            removeAllOptions(relList, selectBox);

            // call function to add optgroup/option elements
            // pass reference to associated select list and data for new options
            appendDataToSelect(relList, obj);
        }

        // removes all option elements in select list
        // removeGrp (optional) boolean to remove optgroups
        function removeAllOptions(sel, removeGrp) {
            var len, groups, par;
            if (removeGrp) {
                groups = sel.getElementsByTagName('optgroup');
                len = groups.length;
                for (var i = len; i; i--) {
                    sel.removeChild(groups[i - 1]);
                }
            }

            len = sel.options.length;
            for (var i = len; i; i--) {
                par = sel.options[i - 1].parentNode;
                par.removeChild(sel.options[i - 1]);
            }
        }

        function appendDataToSelect(sel, obj) {
            var f = document.createDocumentFragment();
            var labels = [], group, opts;

            function addOptions(obj) {
                var f = document.createDocumentFragment();
                var o;

                for (var i = 0, len = obj.text.length; i < len; i++) {
                    o = document.createElement('option');
                    o.appendChild(document.createTextNode(obj.text[i]));

                    if (obj.value) {
                        o.value = obj.value[i];
                    }

                    f.appendChild(o);
                }
                return f;
            }

            if (obj.text) {
                opts = addOptions(obj);
                f.appendChild(opts);
            } else {
            for (var prop in obj) {
                    if (obj.hasOwnProperty(prop)) {
                        labels.push(prop);
                    }
                }

                for (var i = 0, len = labels.length; i < len; i++) {
                    group = document.createElement('optgroup');
                    group.label = labels[i];
                    f.appendChild(group);
                    opts = addOptions(obj[labels[i]]);
                    group.appendChild(opts);
                }
            }
            sel.appendChild(f);
        }

        var form = document.forms['pick-up-time-form'];

        // reference to controlling select box
        var sel = form.elements['day'];
        sel.selectedIndex = 0;

        // name of associated select box
        var relName = 'hour';
        // reference to associated select box
        var rel = form.elements[relName];

        // get data for associated select box passing its name
        // and value of selected in controlling select box
        var data = Select_List_Data[relName][sel.value];

        // add options to associated select box
        appendDataToSelect(rel, data);
</script>