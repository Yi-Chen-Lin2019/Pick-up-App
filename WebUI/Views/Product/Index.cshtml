@model WebUI.ViewModels.BrowseViewModel
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@*SORTING_DROPDOWN*@
@{
    List<SelectListItem> sortingOptions = new List<SelectListItem>();
    sortingOptions.Add(new SelectListItem
    {
        Text = "Sort by",
        Value = ""
    });
    sortingOptions.Add(new SelectListItem
    {
        Text = "Price low-to-high",
        Value = "price_asc"
    });
    sortingOptions.Add(new SelectListItem
    {
        Text = "Price high-to-low",
        Value = "price_desc"
    });
    sortingOptions.Add(new SelectListItem
    {
        Text = "Name A-Z",
        Value = "name_desc"
    });
    sortingOptions.Add(new SelectListItem
    {
        Text = "Name Z-A",
        Value = "name_asc"
    });
}
@Html.DropDownList("sortDD", sortingOptions,
    new { @class = "sorting-drop-box", @onchange = "document.location.href = '/Product/Index?sortOrder=' + this.options[this.selectedIndex].value;" })


@*CATEGORY_LIST*@
<div class="categories-container">
    <div class="categories-box">
        @{
            IEnumerable<WebUI.ViewModels.CategoryViewModel> cats = Model.categories;

            //If statement using if needed to add a bottom border for last category label
            var count = cats.Count();
            var i = 1;
            foreach (var item in cats)
            {
                if (i == count)
                {<label style="border-bottom: 1px solid lightgray;" onclick="location.href='@Url.Action("Index", "Product")?category=' + @item.id">@item.name</label>}
            else
            {<label onclick="location.href='@Url.Action("Index", "Product")?category=' + @item.id">@item.name</label>}
        i++;
    }
        }

    </div>
</div>

<script>
    function addToCart(productId, price, name, ImageUrl) {

        $(function () {
            $.post('/ShoppingCart/AddToCart',
                { productId: productId, price: price, name: name, ImageUrl: ImageUrl }, function (data) {
                    if (data.success) {
                        alert("Item added to cart.");
                    }
                    else {
                        alert("Failure!");
                    }
                });
        });

    }
</script>
@*PRODUCT_LIST*@
<div class="productList-container">
    @foreach (var item in Model.products)
    {
        <div class="productDisplay">
            <div class="product-photo">
                @Html.Partial("~/Views/Product/Details.cshtml", item)
            </div>
            <div class="product-title">
                <p style="font-size: 20px;">&nbsp @item.ProductName</p>
                <p style="font-size: 14px;">&nbsp @String.Format("{0:0.00} DKK", item.ProductPrice)</p>
            </div>
        </div>
    }
</div>
<div class="pagin-container">
    @Html.PagedListPager(Model.products, page => Url.Action("Index", new { page }))
</div>

